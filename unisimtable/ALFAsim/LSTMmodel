import torch.nn as nn

class LSTMModel(nn.Module):
    def __init__(self, input_dim, hidden_dim, output_dim, dropout_rate):
        super(LSTMModel, self).__init__()
        
        # Camada LSTM bidirecional
        self.lstm = nn.LSTM(input_dim, hidden_dim, batch_first=True, bidirectional=False)
        
        self.dense_layers = nn.Sequential(
        nn.Linear(hidden_dim, 30),  
        nn.ReLU(),
        #nn.Linear(128, 128),
        #nn.Tanh(),
        nn.Linear(30, 1),
    )
    def forward(self, x):
        # Pegar apenas a saída do último time step
        lstm_out, _ = self.lstm(x)
        last_out = lstm_out[:, -1, :]
    
        out = self.dense_layers(last_out)
        return out
